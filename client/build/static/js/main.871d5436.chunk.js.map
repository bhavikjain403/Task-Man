{"version":3,"sources":["components/ToastNotify.js","context/auth/authReducer.js","context/auth/authState.js","utils/localStorageHelpers.js","styles/muiStyles.js","components/NavBar.js","context/entry/entryReducer.js","context/entry/entryState.js","components/DeleteDialog.js","services/entries.js","backendUrl.js","utils/notifyDispatcher.js","components/Card.js","components/EntriesDisplay.js","components/AlertBox.js","components/AddUpdateForm.js","services/auth.js","components/RegisterForm.js","components/LoginForm.js","components/Routes.js","App.js","index.js"],"names":["ToastNotify","open","handleClose","severity","message","Snackbar","autoHideDuration","duration","onClose","anchorOrigin","vertical","horizontal","Alert","loginUser","userData","type","payload","authReducer","state","action","user","initialState","AuthContext","createContext","AuthStateProvider","children","useReducer","dispatch","Provider","value","useAuthContext","useContext","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","useFormStyles","makeStyles","theme","root","display","flexDirection","justifyContent","padding","breakpoints","up","formTitle","textAlign","marginBottom","input","alignItems","inputIcon","marginRight","buttonGroup","marginTop","useNavStyles","navContainer","position","top","zIndex","topLeftButton","flexGrow","logoWrapper","width","logo","logoIcon","titleButton","textTransform","fontSize","navButtons","backgroundColor","useTopPanelStyles","desktopButton","margin","background","color","footerStyles","footerText","useDeleteBtnStyles","deleteButton","index","useRegisterLoginForm","minHeight","form","down","submitButton","bottomText","useAlertStyles","spacing","useMainPaperStyles","flex","NavBar","authDispatch","location","useLocation","useTheme","isMobile","useMediaQuery","classes","handleLogout","storageService","loggedUser","Container","disableGutters","className","AppBar","style","paddingTop","paddingBottom","Toolbar","pathname","Button","component","RouterLink","to","startIcon","Typography","variant","displayName","onClick","initializeEntries","entries","addEntry","entry","removeEntry","id","updateEntry","entryReducer","filter","e","map","editValues","notification","isLoading","EntryContext","EntryStateProvider","useEntryContext","DeleteDialog","handleDelete","title","baseUrl","token","setConfig","headers","setToken","newToken","getAll","a","axios","get","response","data","create","entryObj","post","update","put","remove","delete","timeoutId","notify","clearTimeout","setTimeout","Card","link","description","createdAt","updatedAt","history","useHistory","cardTitle","endButtons","linkTitle","flexWrap","edit","addedTime","timestamp","fontWeight","useCardStyles","entryService","error","formattedLink","startsWith","iconSize","Paper","setEditValues","push","Divider","Link","href","datetime","EntriesDisplay","size","key","AlertBox","clearError","AlertTitle","initialInputValues","tags","AddUpdateForm","useState","setEntry","setError","useEffect","handleOnChange","target","name","handleSubmit","preventDefault","entryRes","errRes","includes","onSubmit","TextField","required","label","onChange","fullWidth","multiline","disabled","login","credentials","register","enteredData","RegisterForm","email","password","userDetails","setUserDetails","confirmPassword","setConfirmPassword","showPass","setShowPass","showConfirmPass","setShowConfirmPass","entryDispatch","handleRegister","authService","InputProps","endAdornment","InputAdornment","IconButton","LoginForm","setCredentials","handleLogin","textDecoration","Routes","exact","path","App","getAllEntries","elevation","Boolean","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.871d5436.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst ToastNotify = ({ open, handleClose, severity, message }) => {\r\n  const duration = 5;\r\n\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      autoHideDuration={duration * 1000}\r\n      onClose={handleClose}\r\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n    >\r\n      <Alert onClose={handleClose} severity={severity}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default ToastNotify;\r\n","const authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'REGISTER_USER':\r\n      return {\r\n        user: action.payload,\r\n      };\r\n    case 'LOGIN_USER':\r\n      return {\r\n        user: action.payload,\r\n      };\r\n    case 'LOGOUT_USER':\r\n      return {\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const registerUser = (userData) => {\r\n  return {\r\n    type: 'REGISTER_USER',\r\n    payload: userData,\r\n  };\r\n};\r\n\r\nexport const loginUser = (userData) => {\r\n  return {\r\n    type: 'LOGIN_USER',\r\n    payload: userData,\r\n  };\r\n};\r\n\r\nexport const logoutUser = () => {\r\n  return {\r\n    type: 'LOGOUT_USER',\r\n  };\r\n};\r\n\r\nexport default authReducer;\r\n","import React, { useReducer, createContext, useContext } from 'react';\r\nimport authReducer from './authReducer';\r\n\r\nconst initialState = {\r\n  user: null,\r\n};\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthStateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  return (\r\n    <AuthContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuthContext = () => useContext(AuthContext);\r\n","const storageKeyToken = 'toViewAppUser';\r\n\r\nconst saveUser = (user) =>\r\n  localStorage.setItem(storageKeyToken, JSON.stringify(user));\r\n\r\nconst loadUser = () => JSON.parse(localStorage.getItem(storageKeyToken));\r\n\r\nconst logoutUser = () => localStorage.removeItem(storageKeyToken);\r\n\r\nexport default {\r\n  saveUser,\r\n  loadUser,\r\n  logoutUser,\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useFormStyles = makeStyles(\r\n  (theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      padding: '25px 20px',\r\n      [theme.breakpoints.up('md')]: {\r\n        padding: '50px 250px',\r\n      },\r\n    },\r\n    formTitle: {\r\n      textAlign: 'center',\r\n      marginBottom:\"5%\"\r\n    },\r\n    input: {\r\n      display: 'flex',\r\n      alignItems: 'flex-end',\r\n      marginBottom:\"2%\"\r\n    },\r\n    inputIcon: {\r\n      marginRight: 8,\r\n    },\r\n    buttonGroup: {\r\n      marginTop: '5%',\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n    },\r\n  }),\r\n);\r\n\r\nexport const useCardStyles = () => {\r\n  return makeStyles(\r\n    () => ({\r\n      root: {\r\n        marginTop: 20,\r\n        marginBottom: 5,\r\n        padding: 20,\r\n      },\r\n      cardTitle: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n      },\r\n      endButtons: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n      },\r\n      linkTitle: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexWrap: 'nowrap',\r\n      },\r\n      link: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginTop: '0.6em',\r\n        color:\"navy\"\r\n      },\r\n      description: {\r\n        marginTop: '0.8em',\r\n        marginBottom: '1.2em',\r\n      },\r\n      edit: {\r\n        color: '#7a8efe',\r\n        fontSize: 16,\r\n        textTransform: 'capitalize',\r\n        '&:hover': {\r\n          backgroundColor: '#dce1ff',\r\n        },\r\n        marginRight: 5,\r\n      },\r\n      addedTime: {\r\n        marginTop: 8,\r\n      },\r\n      timestamp: {\r\n        fontWeight: 'bold',\r\n      },\r\n    }),\r\n  );\r\n};\r\n\r\nexport const useNavStyles = makeStyles(\r\n  () => ({\r\n    navContainer: {\r\n      position: 'sticky',\r\n      top: 0,\r\n      zIndex: 10,\r\n    },\r\n    topLeftButton: {\r\n      flexGrow: 1,\r\n    },\r\n    logoWrapper: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      width: '300px',\r\n    },\r\n    logo: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    },\r\n    logoIcon: {\r\n      marginRight: 5,\r\n    },\r\n    user: {\r\n      marginRight: 10,\r\n    },\r\n    titleButton: {\r\n      textTransform: 'capitalize',\r\n      fontSize: 20,\r\n      marginRight: 12,\r\n    },\r\n    navButtons: {\r\n      '&:hover': {\r\n        backgroundColor: '#88929c',\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\nexport const useTopPanelStyles = makeStyles(\r\n  () => ({\r\n    desktopButton: {\r\n      margin: '3% 0px 1% 3%',\r\n      background:'silver',\r\n      color:'black'\r\n    }\r\n  })\r\n);\r\n\r\nexport const footerStyles = makeStyles(\r\n  () => ({\r\n    footerText: {\r\n      textAlign: 'center'\r\n    }\r\n  })\r\n);\r\n\r\nexport const useDeleteBtnStyles = makeStyles(\r\n  () => ({\r\n    deleteButton: {\r\n      color: '#ff846e',\r\n      textTransform: 'capitalize',\r\n      fontSize: 16,\r\n      '&:hover': {\r\n        backgroundColor: '#ffe8e4',\r\n      },\r\n      marginRight: 5,\r\n    },\r\n  }),\r\n  { index: 1 }\r\n);\r\n\r\nexport const useRegisterLoginForm = makeStyles(\r\n  (theme) => ({\r\n    root: {\r\n      minHeight: '100%',\r\n    },\r\n    form: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      padding: '25px 20px',\r\n      [theme.breakpoints.up('md')]: {\r\n        padding: '50px 300px',\r\n      },\r\n    },\r\n    formTitle: {\r\n      textAlign: 'center',\r\n      marginBottom:\"5%\",\r\n      [theme.breakpoints.down('xs')]: {\r\n        fontSize: '1.6rem',\r\n      },\r\n    },\r\n    submitButton: {\r\n      marginTop: '3%'\r\n    },\r\n    input: {\r\n      display: 'flex',\r\n      alignItems: 'flex-end',\r\n      marginBottom:\"2%\"\r\n    },\r\n    inputIcon: {\r\n      marginRight: 8,\r\n    },\r\n    bottomText: {\r\n      textAlign: 'center',\r\n      marginTop: 8,\r\n    },\r\n  }),\r\n);\r\n\r\nexport const useAlertStyles = makeStyles(\r\n  (theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n      marginTop: 10,\r\n    },\r\n  })\r\n);\r\n\r\nexport const useMainPaperStyles = makeStyles(\r\n  () => ({\r\n    root: {\r\n      width: '100vW',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      flex: 1,\r\n      minHeight: '100vH',\r\n    },\r\n  })\r\n);","import React from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport { useAuthContext } from '../context/auth/authState';\r\nimport { logoutUser } from '../context/auth/authReducer';\r\nimport storageService from '../utils/localStorageHelpers';\r\n\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  useMediaQuery,\r\n  Container,\r\n} from '@material-ui/core';\r\nimport { useNavStyles } from '../styles/muiStyles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport ListAltRoundedIcon from '@material-ui/icons/ListAltRounded';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst NavBar = () => {\r\n  const [{ user }, authDispatch] = useAuthContext();\r\n  const location = useLocation();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const classes = useNavStyles();\r\n\r\n  const handleLogout = () => {\r\n    authDispatch(logoutUser());\r\n    storageService.logoutUser();\r\n  };\r\n\r\n  const loggedUser = storageService.loadUser() || user;\r\n\r\n  const menu = () => {\r\n    return user ? (\r\n      <>\r\n        <Typography variant=\"body1\" className={classes.user}>\r\n          Hello, {user && user.displayName}\r\n        </Typography>\r\n        <Button\r\n          color=\"inherit\"\r\n          startIcon={<PowerSettingsNewIcon />}\r\n          onClick={handleLogout}\r\n          className={classes.navButtons}>\r\n          Logout\r\n        </Button>\r\n      </>\r\n    ) : (\r\n      <>\r\n        <Button\r\n          component={RouterLink}\r\n          to=\"/register\"\r\n          color=\"inherit\"\r\n          className={classes.navButtons}\r\n        >\r\n          SIGN UP\r\n        </Button>\r\n        <Button\r\n          component={RouterLink}\r\n          to=\"/login\"\r\n          color=\"inherit\"\r\n          className={classes.navButtons}\r\n        >\r\n          LOG IN\r\n        </Button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container disableGutters className={classes.navContainer}>\r\n      <AppBar position=\"static\" style={{paddingTop:\"1%\", paddingBottom:\"1%\", background:\"black\"}}>\r\n        <Toolbar disableGutters={isMobile}>\r\n          <div className={classes.topLeftButton}>\r\n            {location.pathname === '/' || !loggedUser ? (\r\n              <div className={classes.logoWrapper}>\r\n                <Typography variant = 'h5' className={classes.logo}>\r\n                  <ListAltRoundedIcon className={classes.logoIcon} />\r\n                  TASK--MAN\r\n                </Typography>\r\n              </div>\r\n            ) : (\r\n              <Button\r\n                component={RouterLink}\r\n                to=\"/\"\r\n                color=\"inherit\"\r\n                startIcon={<ArrowBackIcon />}\r\n              >\r\n                Back\r\n              </Button>\r\n            )}\r\n          </div>\r\n          {menu()}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NavBar;","const entryReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INIT_ENTRIES':\r\n      return {\r\n        ...state,\r\n        entries: action.payload,\r\n      };\r\n    case 'ADD_ENTRY':\r\n      return {\r\n        ...state,\r\n        entries: [...state.entries, action.payload],\r\n      };\r\n    case 'REMOVE_ENTRY':\r\n      return {\r\n        ...state,\r\n        entries: state.entries.filter((e) => e.id !== action.payload),\r\n      };\r\n    case 'UPDATE_ENTRY':\r\n      return {\r\n        ...state,\r\n        entries: state.entries.map((e) =>\r\n          e.id !== action.payload.id ? e : action.payload\r\n        ),\r\n      };\r\n    case 'SET_EDIT_VALUES':\r\n      return {\r\n        ...state,\r\n        editValues: action.payload,\r\n      };\r\n    case 'RESET_EDIT_VALUES':\r\n      return {\r\n        ...state,\r\n        editValues: null,\r\n      };\r\n    case 'SET_NOTIFICATION':\r\n      return {\r\n        ...state,\r\n        notification: action.payload,\r\n      };\r\n    case 'CLEAR_NOTIFICATION':\r\n      return {\r\n        ...state,\r\n        notification: null,\r\n      };\r\n    case 'TOGGLE_IS_LOADING':\r\n      return {\r\n        ...state,\r\n        isLoading: !state.isLoading,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializeEntries = (entries) => {\r\n  return {\r\n    type: 'INIT_ENTRIES',\r\n    payload: entries,\r\n  };\r\n};\r\n\r\nexport const addEntry = (entry) => {\r\n  return {\r\n    type: 'ADD_ENTRY',\r\n    payload: entry,\r\n  };\r\n};\r\n\r\nexport const removeEntry = (id) => {\r\n  return {\r\n    type: 'REMOVE_ENTRY',\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const updateEntry = (entry) => {\r\n  return {\r\n    type: 'UPDATE_ENTRY',\r\n    payload: entry,\r\n  };\r\n};\r\n\r\nexport const setEditValues = (entry) => {\r\n  return {\r\n    type: 'SET_EDIT_VALUES',\r\n    payload: entry,\r\n  };\r\n};\r\n\r\nexport const resetEditValues = () => {\r\n  return {\r\n    type: 'RESET_EDIT_VALUES',\r\n  };\r\n};\r\n\r\nexport const setNotification = (notifObj) => {\r\n  return {\r\n    type: 'SET_NOTIFICATION',\r\n    payload: notifObj,\r\n  };\r\n};\r\n\r\nexport const clearNotification = () => {\r\n  return {\r\n    type: 'CLEAR_NOTIFICATION',\r\n  };\r\n};\r\n\r\nexport const toggleIsLoading = () => {\r\n  return {\r\n    type: 'TOGGLE_IS_LOADING',\r\n  };\r\n};\r\n\r\nexport default entryReducer;","import React, { useReducer, createContext, useContext } from 'react';\r\nimport entryReducer from './entryReducer';\r\n\r\nconst initialState = {\r\n  entries: [],\r\n  editValues: null,\r\n  notification: null,\r\n  isLoading: false,\r\n};\r\n\r\nconst EntryContext = createContext();\r\n\r\nexport const EntryStateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(entryReducer, initialState);\r\n\r\n  return (\r\n    <EntryContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </EntryContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useEntryContext = () => useContext(EntryContext);\r\n","import React from 'react';\r\n\r\nimport {Button} from '@material-ui/core';\r\n\r\nimport { useDeleteBtnStyles } from '../styles/muiStyles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst DeleteDialog = ({ handleDelete, title, isMobile }) => {\r\n  const classes = useDeleteBtnStyles();\r\n  return (\r\n    <div>\r\n        <Button\r\n          className={classes.deleteButton}\r\n          startIcon={<DeleteIcon />}\r\n          onClick={handleDelete}\r\n        >\r\n          Delete\r\n        </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteDialog;","import axios from 'axios';\r\nimport backendUrl from '../backendUrl';\r\n\r\nconst baseUrl = `${backendUrl}/api/entries`;\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n  token = newToken;\r\n};\r\n\r\nconst setConfig = () => {\r\n  return {\r\n    headers: { 'x-auth-token': token },\r\n  };\r\n};\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(`${baseUrl}`, setConfig());\r\n  return response.data;\r\n};\r\n\r\nconst create = async (entryObj) => {\r\n  const response = await axios.post(`${baseUrl}`, entryObj, setConfig());\r\n  return response.data;\r\n};\r\n\r\nconst update = async (id, entryObj) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, entryObj, setConfig());\r\n  return response.data;\r\n};\r\n\r\nconst remove = async (id) => {\r\n  const response = await axios.delete(`${baseUrl}/${id}`, setConfig());\r\n  return response.data;\r\n};\r\n\r\nexport default { setToken, getAll, create, update, remove };\r\n","const backendUrl = 'http://localhost:7000';\r\n\r\nexport default backendUrl;\r\n","import {\r\n  setNotification,\r\n  clearNotification,\r\n} from '../context/entry/entryReducer';\r\n\r\nlet duration = 5;\r\nlet timeoutId = null;\r\n\r\nconst notify = (dispatch, message, severity) => {\r\n  clearTimeout(timeoutId);\r\n  dispatch(setNotification({ message, severity }));\r\n  timeoutId = setTimeout(() => {\r\n    dispatch(clearNotification());\r\n  }, duration * 1000);\r\n};\r\n\r\nexport default notify;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useEntryContext } from '../context/entry/entryState';\r\nimport {\r\n  removeEntry,\r\n  setEditValues,\r\n} from '../context/entry/entryReducer';\r\nimport TimeAgo from 'timeago-react';\r\nimport DeleteDialog from './DeleteDialog';\r\nimport entryService from '../services/entries';\r\nimport notify from '../utils/notifyDispatcher';\r\n\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  useMediaQuery,\r\n  Link,\r\n  Button,\r\n  Divider,\r\n} from '@material-ui/core';\r\nimport { useCardStyles } from '../styles/muiStyles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport WebIcon from '@material-ui/icons/Web';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst Card = ({ entry }) => {\r\n  const {\r\n    id,\r\n    title,\r\n    link,\r\n    description,\r\n    createdAt,\r\n    updatedAt,\r\n  } = entry;\r\n\r\n  const [,dispatch] = useEntryContext();\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const classes = useCardStyles()();\r\n\r\n  const handleEdit = () => {\r\n    dispatch(setEditValues(entry));\r\n    history.push('/add_update');\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      dispatch(removeEntry(id));\r\n      await entryService.remove(id);\r\n      notify(dispatch, `Successfully deleted \"${title}\"!`, 'success');\r\n    } catch (err) {\r\n      if (err?.response?.data?.error) {\r\n        notify(dispatch, `${err.response.data.error}`, 'error');\r\n      } else {\r\n        notify(dispatch, `${err.message}`, 'error');\r\n      }\r\n    }\r\n  };\r\n\r\n  const formattedLink = link.startsWith('http') ? link : `https://${link}`;\r\n  const iconSize = isMobile ? 'small' : 'large';\r\n  const iconStyle = { marginRight: 8 };\r\n\r\n  return (\r\n    <Paper className={classes.root} variant=\"outlined\">\r\n      <div className={classes.cardTitle}>\r\n        <Typography variant=\"h6\" className={classes.linkTitle}>\r\n            <WebIcon style={iconStyle} fontSize={iconSize} />{title}\r\n        </Typography>\r\n        <div className={classes.endButtons}>\r\n            <>\r\n              <Button\r\n                onClick={handleEdit}\r\n                startIcon={<EditIcon />}\r\n                className={classes.edit}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <DeleteDialog\r\n                handleDelete={handleDelete}\r\n                title={title}\r\n                isMobile={isMobile}/>\r\n            </>\r\n        </div>\r\n      </div>\r\n      <Divider />\r\n      <div>\r\n        <Link\r\n          href={formattedLink}\r\n          color=\"secondary\"\r\n          className={classes.link}\r\n        >\r\n          <LinkIcon style={{ marginRight: 8 }} />\r\n          {formattedLink}\r\n        </Link>\r\n        <Typography className={classes.description}>\r\n          {description}\r\n        </Typography>\r\n        <Typography variant=\"body2\" className={classes.addedTime}>\r\n            <span>\r\n              Added:{' '}\r\n              <TimeAgo datetime={createdAt} className={classes.timestamp} />\r\n            </span>\r\n          {createdAt !== updatedAt ? (\r\n              <span>\r\n                {' '}\r\n                | Last modified:{' '}\r\n                <TimeAgo\r\n                  datetime={updatedAt}\r\n                  className={classes.timestamp}\r\n                />{' '}\r\n              </span>\r\n          ) : null}\r\n        </Typography>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport { useEntryContext } from '../context/entry/entryState';\r\nimport Card from './Card';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { resetEditValues } from '../context/entry/entryReducer';\r\nimport { Button } from '@material-ui/core';\r\nimport { useTopPanelStyles } from '../styles/muiStyles';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\n\r\n\r\nconst EntriesDisplay = () => {\r\n  const [{ entries},dispatch] = useEntryContext();\r\n  const classes = useTopPanelStyles();\r\n  \r\n  return (\r\n    <div>\r\n      <Button\r\n          className={classes.desktopButton}\r\n          component={RouterLink}\r\n          to=\"/add_update\"\r\n          size=\"large\"\r\n          startIcon={<PostAddIcon />}\r\n          onClick={() => dispatch(resetEditValues())}\r\n        >\r\n          Add Entry\r\n      </Button>\r\n      {entries.map((entry) => <Card key={entry.id} entry={entry} />)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EntriesDisplay;","import React from 'react';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport { useAlertStyles } from '../styles/muiStyles';\r\n\r\nconst AlertBox = ({ severity, message, clearError, title }) => {\r\n  const classes = useAlertStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Alert severity={severity} onClose={clearError}>\r\n        <AlertTitle>{title || 'Error'}</AlertTitle>\r\n        {message}\r\n      </Alert>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlertBox;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AlertBox from './AlertBox';\r\nimport entryService from '../services/entries';\r\nimport { useEntryContext } from '../context/entry/entryState';\r\nimport {\r\n  addEntry,\r\n  updateEntry,\r\n  resetEditValues,\r\n  toggleIsLoading,\r\n} from '../context/entry/entryReducer';\r\nimport notify from '../utils/notifyDispatcher';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Paper,\r\n} from '@material-ui/core/';\r\nimport { useFormStyles } from '../styles/muiStyles';\r\nimport TitleIcon from '@material-ui/icons/Title';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport BackspaceIcon from '@material-ui/icons/Backspace';\r\n\r\nconst initialInputValues = {\r\n  title: '',\r\n  link: '',\r\n  description: '',\r\n  type: 'article',\r\n  tags: [],\r\n};\r\n\r\nconst AddUpdateForm = () => {\r\n  const [entry, setEntry] = useState(initialInputValues);\r\n  const [error, setError] = useState('');\r\n  const [{ editValues, isLoading }, dispatch] = useEntryContext();\r\n  const history = useHistory();\r\n  const classes = useFormStyles();\r\n\r\n  useEffect(() => {\r\n    if (editValues) {\r\n      setEntry(editValues);\r\n    }\r\n  }, [editValues]);\r\n\r\n  const { title, link, description } = entry;\r\n\r\n  const handleOnChange = (e) => {\r\n    setEntry({\r\n      ...entry,\r\n      [e.target.name]: e.target.value,\r\n    }); \r\n  };\r\n\r\n  const handleClearInput = () => {\r\n    if (editValues) {\r\n      dispatch(resetEditValues());\r\n    }\r\n    setEntry(initialInputValues);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      dispatch(toggleIsLoading());\r\n      if (editValues) {\r\n        const entryRes = await entryService.update(editValues.id, entry);\r\n        dispatch(updateEntry(entryRes));\r\n        notify(\r\n          dispatch,\r\n          `Entry \"${editValues.title}\" has been successfully updated.`,\r\n          'success'\r\n        );\r\n        dispatch(resetEditValues());\r\n      } else\r\n      {\r\n        const entryRes = await entryService.create(entry);\r\n        dispatch(addEntry(entryRes));\r\n        notify(\r\n          dispatch,\r\n          `New entry \"${entryRes.title}\" has been successfully added!`,\r\n          'success'\r\n        );\r\n      }\r\n\r\n      dispatch(toggleIsLoading());\r\n      setEntry(initialInputValues);\r\n      history.push('/');\r\n    } catch (err) {\r\n      dispatch(toggleIsLoading());\r\n\r\n      const errRes = err?.response?.data;\r\n\r\n      if (\r\n        errRes?.error.includes('title') &&\r\n        errRes?.error.includes('allowed length (40)')\r\n      ) {\r\n        return setError(`Title field's maximum character limit is 40. `);\r\n      } else if (\r\n        errRes?.error.includes('description') &&\r\n        errRes?.error.includes('allowed length (250)')\r\n      ) {\r\n        return setError(`Description field's maximum character limit is 250. `);\r\n      } else if (errRes?.error) {\r\n        return setError(errRes.error);\r\n      } else {\r\n        return setError(err.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <form onSubmit={handleSubmit} className={classes.root}>\r\n        <Typography\r\n          variant='h6'\r\n          className={classes.formTitle}\r\n        >\r\n          {editValues ? 'UPDATE ENTRY' : 'ADD NEW ENTRY'}\r\n        </Typography>\r\n        <div className={classes.input}>\r\n          <TitleIcon className={classes.inputIcon} />\r\n          <TextField\r\n            required\r\n            label=\"Title\"\r\n            value={title}\r\n            name=\"title\"\r\n            onChange={handleOnChange}\r\n            fullWidth\r\n          />\r\n        </div>\r\n        <div className={classes.input}>\r\n          <DescriptionIcon className={classes.inputIcon} />\r\n          <TextField\r\n            required\r\n            multiline\r\n            label=\"Description\"\r\n            value={description}\r\n            name=\"description\"\r\n            onChange={handleOnChange}\r\n            fullWidth\r\n          />\r\n        </div>\r\n        <div className={classes.input}>\r\n          <LinkIcon className={classes.inputIcon} />\r\n          <TextField\r\n            required\r\n            label=\"Link\"\r\n            value={link}\r\n            name=\"link\"\r\n            onChange={handleOnChange}\r\n            fullWidth\r\n          />\r\n        </div>\r\n        <div className={classes.buttonGroup}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size='medium'\r\n            startIcon={<BackspaceIcon />}\r\n            onClick={handleClearInput}\r\n          >\r\n            CLEAR\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            size='medium'\r\n            startIcon={editValues ? <EditIcon /> : <PostAddIcon />}\r\n            disabled={isLoading}\r\n            style={{background:\"black\", color:\"snow\"}}\r\n          >\r\n            {editValues\r\n              ? isLoading\r\n                ? 'Updating Entry'\r\n                : 'Update Entry'\r\n              : isLoading\r\n              ? 'Adding Entry'\r\n              : 'Add Entry'}\r\n          </Button>\r\n        </div>\r\n        {error && (\r\n          <AlertBox\r\n            message={error}\r\n            severity=\"error\"\r\n            clearError={() => setError(null)}\r\n          />\r\n        )}\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default AddUpdateForm;\r\n","import axios from 'axios';\r\nimport backendUrl from '../backendUrl';\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(`${backendUrl}/api/login`, credentials);\r\n  return response.data;\r\n};\r\n\r\nconst register = async (enteredData) => {\r\n  const response = await axios.post(`${backendUrl}/api/register`, enteredData);\r\n  return response.data;\r\n};\r\n\r\nexport default { login, register };\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\nimport AlertBox from './AlertBox';\r\nimport authService from '../services/auth';\r\nimport entryService from '../services/entries';\r\nimport { useAuthContext } from '../context/auth/authState';\r\nimport { registerUser } from '../context/auth/authReducer';\r\nimport { useEntryContext } from '../context/entry/entryState';\r\nimport { toggleIsLoading } from '../context/entry/entryReducer';\r\nimport storageService from '../utils/localStorageHelpers';\r\nimport notify from '../utils/notifyDispatcher';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Paper,\r\n  Link,\r\n  InputAdornment,\r\n  IconButton,\r\n} from '@material-ui/core/';\r\nimport { useRegisterLoginForm } from '../styles/muiStyles';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport EnhancedEncryptionIcon from '@material-ui/icons/EnhancedEncryption';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\nconst RegisterForm = () => {\r\n  const [userDetails, setUserDetails] = useState({\r\n    displayName: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [showPass, setShowPass] = useState(false);\r\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\r\n  const [, authDispatch] = useAuthContext();\r\n  const [{ isLoading }, entryDispatch] = useEntryContext();\r\n  const classes = useRegisterLoginForm();\r\n  const history = useHistory();\r\n  const { displayName, email, password } = userDetails;\r\n\r\n  const handleOnChange = (e) => {\r\n    setUserDetails({ ...userDetails, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      return setError(`Confirm password failed! Both passwords need to match.`);\r\n    }\r\n    try {\r\n      entryDispatch(toggleIsLoading());\r\n      const user = await authService.register(userDetails);\r\n      entryService.setToken(user.token);\r\n      authDispatch(registerUser(user));\r\n      storageService.saveUser(user);\r\n      entryDispatch(toggleIsLoading());\r\n\r\n      setUserDetails({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n      });\r\n      setConfirmPassword('');\r\n      setError(null);\r\n      history.push('/');\r\n      notify(\r\n        entryDispatch,\r\n        `Welcome, ${user.displayName}! Your account has been registered.`,\r\n        'success'\r\n      );\r\n    } catch (err) {\r\n      entryDispatch(toggleIsLoading());\r\n\r\n      if (err?.response?.data?.error) {\r\n        setError(err.response.data.error);\r\n      } else {\r\n        setError(err.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <form onSubmit={handleRegister} className={classes.form}>\r\n        <Typography variant=\"h6\" className={classes.formTitle} style={{marginBottom:\"5%\"}}>\r\n          SIGN UP\r\n        </Typography>\r\n        <div className={classes.input} style={{marginBottom:\"2%\"}}>\r\n          <PersonIcon className={classes.inputIcon} />\r\n          <TextField\r\n            required\r\n            label=\"Name\"\r\n            value={displayName}\r\n            name=\"displayName\"\r\n            onChange={handleOnChange}\r\n            fullWidth\r\n          />\r\n        </div>\r\n        <div className={classes.input} style={{marginBottom:\"2%\"}}>\r\n          <AlternateEmailIcon className={classes.inputIcon} />\r\n          <TextField\r\n            required\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            value={email}\r\n            name=\"email\"\r\n            onChange={handleOnChange}\r\n            fullWidth\r\n          />\r\n        </div>\r\n        <div className={classes.input} style={{marginBottom:\"2%\"}}>\r\n          <LockIcon className={classes.inputIcon} />\r\n          <TextField\r\n            required\r\n            type={showPass ? 'text' : 'password'}\r\n            label=\"Password\"\r\n            value={password}\r\n            name=\"password\"\r\n            onChange={handleOnChange}\r\n            fullWidth\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={() => setShowPass(!showPass)}>\r\n                    {showPass ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={classes.input} style={{marginBottom:\"5%\"}}>\r\n          <EnhancedEncryptionIcon className={classes.inputIcon}/>\r\n          <TextField\r\n            required\r\n            type={showConfirmPass ? 'text' : 'password'}\r\n            label=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            name=\"confirmPassword\"\r\n            onChange={({ target }) => setConfirmPassword(target.value)}\r\n            fullWidth\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    onClick={() => setShowConfirmPass(!showConfirmPass)}\r\n                  >\r\n                    {showConfirmPass ? (\r\n                      <VisibilityOffIcon />\r\n                    ) : (\r\n                      <VisibilityIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          size=\"large\"\r\n          className={classes.submitButton}\r\n          startIcon={<PersonAddIcon />}\r\n          disabled={isLoading}\r\n          style={{background:\"black\", color:\"snow\"}}\r\n        >\r\n          {isLoading ? 'Registering' : 'Register'}\r\n        </Button>\r\n        <Typography variant=\"body1\" className={classes.bottomText}>\r\n          Already have an account?{' '}\r\n          <Link component={RouterLink} to=\"/login\">\r\n            Login.\r\n          </Link>\r\n        </Typography>\r\n        {error && (\r\n          <AlertBox\r\n            message={error}\r\n            severity=\"error\"\r\n            clearError={() => setError(null)}\r\n          />\r\n        )}\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;","import React, { useState } from 'react';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\nimport AlertBox from './AlertBox';\r\nimport authService from '../services/auth';\r\nimport entryService from '../services/entries';\r\nimport { useAuthContext } from '../context/auth/authState';\r\nimport { useEntryContext } from '../context/entry/entryState';\r\nimport { loginUser } from '../context/auth/authReducer';\r\nimport { toggleIsLoading } from '../context/entry/entryReducer';\r\nimport storageService from '../utils/localStorageHelpers';\r\nimport notify from '../utils/notifyDispatcher';\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Paper,\r\n  Link,\r\n  InputAdornment,\r\n  IconButton,\r\n} from '@material-ui/core/';\r\nimport { useRegisterLoginForm } from '../styles/muiStyles';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\nconst LoginForm = () => {\r\n  const [credentials, setCredentials] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [error, setError] = useState(null);\r\n  const [showPass, setShowPass] = useState(false);\r\n  const [, authDispatch] = useAuthContext();\r\n  const [{ isLoading }, entryDispatch] = useEntryContext();\r\n  const classes = useRegisterLoginForm();\r\n  const history = useHistory();\r\n  const { email, password } = credentials;\r\n\r\n  const handleOnChange = (e) => {\r\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      entryDispatch(toggleIsLoading());\r\n      const user = await authService.login(credentials);\r\n      entryService.setToken(user.token);\r\n      authDispatch(loginUser(user));\r\n      storageService.saveUser(user);\r\n      entryDispatch(toggleIsLoading());\r\n\r\n      setCredentials({\r\n        email: '',\r\n        password: '',\r\n      });\r\n      setError(null);\r\n      history.push('/');\r\n      notify(\r\n        entryDispatch,\r\n        `Welcome, ${user.displayName}! You're logged in.`,\r\n        'success'\r\n      );\r\n    } catch (err) {\r\n      entryDispatch(toggleIsLoading());\r\n\r\n      if (err?.response?.data?.error) {\r\n        setError({ message: err.response.data.error, severity: 'error' });\r\n      } else {\r\n        setError({ message: err.message, severity: 'error' });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <form onSubmit={handleLogin} className={classes.form}>\r\n        <Typography variant=\"h6\" className={classes.formTitle}>\r\n          LOGIN\r\n        </Typography>\r\n        <div className={classes.input}>\r\n          <AlternateEmailIcon className={classes.inputIcon}/>\r\n          <TextField\r\n            required\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            value={email}\r\n            name=\"email\"\r\n            onChange={handleOnChange}\r\n            fullWidth\r\n          />\r\n        </div>\r\n        <div className={classes.input}>\r\n          <LockIcon className={classes.inputIcon} />\r\n          <TextField\r\n            required\r\n            type={showPass ? 'text' : 'password'}\r\n            label=\"Password\"\r\n            value={password}\r\n            name=\"password\"\r\n            onChange={handleOnChange}\r\n            fullWidth\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={() => setShowPass(!showPass)}>\r\n                    {showPass ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          size=\"large\"\r\n          className={classes.submitButton}\r\n          startIcon={<ExitToAppIcon />}\r\n          disabled={isLoading}\r\n          style={{background:\"black\", color:\"snow\"}}\r\n        >\r\n          {isLoading ? 'Logging in' : 'Login'}\r\n        </Button>\r\n        <Typography className={classes.bottomText}>\r\n          Don't have an account?{' '}\r\n          <Link component={RouterLink} to=\"/register\" style={{textDecoration:\"underline\"}}>\r\n            Sign Up\r\n          </Link>\r\n        </Typography>\r\n        {error && (\r\n          <AlertBox\r\n            message={error.message}\r\n            severity={error.severity}\r\n            clearError={() => setError(null)}\r\n            title={error.title}\r\n          />\r\n        )}\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport EntriesDisplay from './EntriesDisplay';\r\nimport AddUpdateForm from './AddUpdateForm';\r\nimport RegisterForm from './RegisterForm';\r\nimport LoginForm from './LoginForm';\r\nimport { useAuthContext } from '../context/auth/authState';\r\nimport storageService from '../utils/localStorageHelpers';\r\nimport { Container } from '@material-ui/core';\r\n\r\nconst Routes = () => {\r\n  const [{ user }] = useAuthContext();\r\n  const loggedUser = storageService.loadUser() || user;\r\n\r\n  return (\r\n    <Container disableGutters>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          {loggedUser ? (\r\n            <>\r\n              <EntriesDisplay />\r\n            </>\r\n          ) : (\r\n            <Redirect to=\"/login\" />\r\n          )}\r\n        </Route>\r\n        <Route exact path=\"/add_update\">\r\n          {loggedUser ? <AddUpdateForm /> : <Redirect to=\"/login\" />}\r\n        </Route>\r\n        <Route exact path=\"/register\">\r\n          <RegisterForm />\r\n        </Route>\r\n        <Route exact path=\"/login\">\r\n          <LoginForm />\r\n        </Route>\r\n      </Switch>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { useEffect } from 'react';\nimport ToastNotify from './components/ToastNotify';\nimport NavBar from './components/NavBar';\nimport Routes from './components/Routes';\nimport entryService from './services/entries';\nimport storageService from './utils/localStorageHelpers';\nimport { useAuthContext } from './context/auth/authState';\nimport { loginUser } from './context/auth/authReducer';\nimport { useEntryContext } from './context/entry/entryState';\nimport {\n  initializeEntries,\n  clearNotification,\n  toggleIsLoading,\n} from './context/entry/entryReducer';\nimport notify from './utils/notifyDispatcher';\n\nimport { Paper } from '@material-ui/core/';\nimport { useMainPaperStyles } from './styles/muiStyles';\nimport { footerStyles } from './styles/muiStyles';\n\nconst App = () => {\n  const [{ user }, authDispatch] = useAuthContext();\n  const [{ notification }, entryDispatch] = useEntryContext();\n\n  const classes = useMainPaperStyles();\n\n  useEffect(() => {\n    const loggedUser = storageService.loadUser();\n\n    if (loggedUser) {\n      authDispatch(loginUser(loggedUser));\n      entryService.setToken(loggedUser.token);\n    }\n  }, [authDispatch]);\n\n  useEffect(() => {\n    const getAllEntries = async () => {\n      try {\n        entryDispatch(toggleIsLoading());\n        const entries = await entryService.getAll();\n        entryDispatch(initializeEntries(entries));\n        entryDispatch(toggleIsLoading());\n      } catch (err) {\n        entryDispatch(toggleIsLoading());\n\n        if (err?.response?.data?.error) {\n          notify(entryDispatch, `${err.response.data.error}`, 'error');\n        } else {\n          notify(entryDispatch, `${err.message}`, 'error');\n        }\n      }\n    };\n    if (user) {\n      getAllEntries();\n    }\n  }, [entryDispatch, user]);\n\n  return (\n      <Paper className={classes.root} elevation={0}>\n        <NavBar />\n        <Routes />\n        {notification && (\n          <ToastNotify\n            open={Boolean(notification)}\n            handleClose={() => entryDispatch(clearNotification())}\n            severity={notification.severity}\n            message={notification.message}\n          />\n        )}\n        <p className={footerStyles().footerText}>Created by Bhavik</p>\n      </Paper>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { AuthStateProvider } from './context/auth/authState';\nimport { EntryStateProvider } from './context/entry/entryState';\nimport './index.css';\n\nReactDOM.render(\n  <Router>\n    <AuthStateProvider>\n      <EntryStateProvider>\n        <App />\n      </EntryStateProvider>\n    </AuthStateProvider>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}